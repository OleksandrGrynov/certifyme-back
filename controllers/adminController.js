//adminController
import { pool } from "../config/db.js";

// üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
export const getAllUsers = async (req, res) => {
    try {
        const users = await pool.query(
            "SELECT id, first_name, last_name, email, role, created_at FROM users ORDER BY id ASC"
        );
        res.json({ success: true, users: users.rows });
    } catch (err) {
        console.error("‚ùå getAllUsers error:", err);
        res.status(500).json({ success: false, message: "Server error" });
    }
};

// üîπ –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const deleteUser = async (req, res) => {
    const client = await pool.connect();
    try {
        const { id } = req.params;
        const userRes = await client.query("SELECT role FROM users WHERE id=$1", [id]);
        if (userRes.rows.length === 0) {
            return res.status(404).json({ success: false, message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });
        }

        if (userRes.rows[0].role === "admin") {
            return res.status(403).json({ success: false, message: "–ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞" });
        }

        await client.query("BEGIN");

        // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤'—è–∑–∞–Ω—ñ –¥–∞–Ω—ñ (—Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏, –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è, —Ç–æ—â–æ)
        await client.query("DELETE FROM certificates WHERE user_id = $1", [id]);
        await client.query("DELETE FROM user_achievements WHERE user_id = $1", [id]);
        // –Ø–∫—â–æ —É –≤–∞—à—ñ–π –ë–î —î —ñ–Ω—à—ñ —Ç–∞–±–ª–∏—Ü—ñ –∑ user_id - –¥–æ–¥–∞–π—Ç–µ —ó—Ö —Å—é–¥–∏
        // await client.query("DELETE FROM reviews WHERE user_id = $1", [id]);

        // –í–∏–¥–∞–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await client.query("DELETE FROM users WHERE id = $1", [id]);

        await client.query("COMMIT");
        res.json({ success: true, message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ ‚úÖ" });
    } catch (err) {
        await client.query("ROLLBACK");
        console.error("‚ùå deleteUser error:", err);
        res.status(500).json({ success: false, message: "Server error" });
    } finally {
        client.release();
    }
};
