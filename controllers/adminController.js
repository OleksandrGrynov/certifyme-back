import { pool } from "../config/db.js";

// üîπ –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
export const getAllUsers = async (req, res) => {
    try {
        const users = await pool.query(
            "SELECT id, first_name, last_name, email, role, created_at FROM users ORDER BY id ASC"
        );
        res.json({ success: true, users: users.rows });
    } catch (err) {
        console.error("‚ùå getAllUsers error:", err);
        res.status(500).json({ success: false, message: "Server error" });
    }
};

// üîπ –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
export const deleteUser = async (req, res) => {
    try {
        const { id } = req.params;

        // –∑–∞—Ö–∏—Å—Ç –≤—ñ–¥ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∞–º–æ–≥–æ –∞–¥–º—ñ–Ω–∞
        const userRes = await pool.query("SELECT role FROM users WHERE id=$1", [id]);
        if (userRes.rows.length === 0) {
            return res.status(404).json({ success: false, message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });
        }

        if (userRes.rows[0].role === "admin") {
            return res
                .status(403)
                .json({ success: false, message: "–ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞" });
        }

        await pool.query("DELETE FROM users WHERE id=$1", [id]);
        res.json({ success: true, message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ ‚úÖ" });
    } catch (err) {
        console.error("‚ùå deleteUser error:", err);
        res.status(500).json({ success: false, message: "Server error" });
    }
};
